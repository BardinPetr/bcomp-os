; ----------------------------- TERMINAL OUTPUT -----------------------------

; func PRINT_CHAR: outputs one char to text printer with wait for device availability
; 0x19,0x18 for printer; 0xA,0x9 for serial port
; 
; params: AC - 1b character in low byte
; return: none
; begin func
EXPORT PRINT_CHAR:
  PUSH ; store target char

  PCH__LOOP:
    ; IN 0xD
    IN 0xA
    ; AND #0x40
    AND #0x20
    BZS PCH__LOOP

  POP
  ; OUT 0xC
  OUT 0x9
  RET
; end func PUT_CHAR


; func PRINT_ENDL: prints CR+LF
; 
; begin func
EXPORT PRINT_ENDL:
  LD #0xD
  FCALL ($PRINT_CHAR_PTR)
  LD #0xA
  FCALL ($PRINT_CHAR_PTR)
  RET
; end func PRINT_ENDL


; func PRINT_CLEAR: clears screen (Form Feed)
; 
; begin func
EXPORT PRINT_CLEAR:
  LD #0x0C
  FCALL ($PRINT_CHAR_PTR)
  RET
; end func PRINT_CLEAR


; func PRINT: outputs string to text printer 
; 
; requires: string encoding should be aggreed between output device and input string. 1b encoding allowed only
; params: AC - pointer to first string data address
; return: none
; stack:  
; &: ptr 
; begin globals:
MASK_LOW: WORD 0x00FF
; end globals
; begin func
EXPORT PRINT:
  APUSH

  ST &ptr

; begin loop
PRINT_LOOP:
  LD (&ptr)+

  BZS PRINT_EXIT
  CALL PRINT_CHAR

  SWAB
  
  AND $MASK_LOW
  BZS PRINT_EXIT
  CALL PRINT_CHAR

  JUMP PRINT_LOOP
; end loop
PRINT_EXIT:
  APOP
  RET
; end func PRINT



; func PRINTLN: outputs string to text printer and adds CRLF 
; 
; requires: string encoding should be aggreed between output device and input string. 1b encoding allowed only
; params: AC - pointer to first string data address
; begin func
EXPORT PRINTLN:
  FCALL ($PRINT_PTR)
  LD #0xD
  FCALL ($PRINT_CHAR_PTR)
  LD #0xA
  FCALL ($PRINT_CHAR_PTR)
  RET
; end func PRINTLN
