; string format: (char[1] char[0]) ... (char[i+1]@1b char[i]@1b) (0x00, 0x00/char[2n-1])

ORG 0x10

INCLUDE util/math.basm
INCLUDE util/string.basm
INCLUDE util/array.basm
INCLUDE io/output.basm
INCLUDE io/input.basm
INCLUDE os/memory.basm
INCLUDE os/loader.basm

JUMP_TARGET: WORD ?
LENS: WORD 0x1F, 0x20, 0x21
LENSP: WORD $LENS
ALCS: WORD 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
ALCSP: WORD $ALCS
START:
  ; CALL $LOAD_BIN
  ; ST JUMP_TARGET
  ; JUMP (JUMP_TARGET)
  HLT


READ_WORD_DEMO_PTR: WORD $BIN
READ_WORD_DEMO:
  LD (READ_WORD_DEMO_PTR)+
  RET


BIN: WORD 0x0002, 0x0100, 0x0000, 0x8004, 0x0100, 0x0004, 0x0001, 0x0200, 0xA200, 0x0000, 0x130C, 0x0100, 0x00E8


_SYS_CODE_END_PTR: WORD 0

; begin globals
ORG 0x700
_SYS_HEAP: WORD 224 DUP (0x0)
; end globals
