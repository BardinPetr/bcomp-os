; ----------------------------- OS -----------------------------


; func OS__INIT: OS start procedure
; begin globals
OSI__INIT_STR: WORD "Initializing..."
OSI__START_STR: WORD "System started"
OSI__END_STR: WORD "System halt"
; end globals
; begin func
EXPORT OS__INIT:
  DI
  
  FCALL ($PRINT_CLEAR_PTR)

  FCALL ($ANSI__CSI_PTR)

  LD OSI__INIT_STR_PTR
  FCALL ($PRINTLN_PTR)

  ; prepare process manager
  FCALL ($PROCMEM__INIT_PTR)
  RSP ; sp_origin
  FCALL ($PROC__INIT_MANAGER_PTR)

  ; setup interrupts
  FCALL ($INT__INIT_PTR)
  LD #1 ; 10Hz
  FCALL ($OS__SETUP_SWITCH_TIMER_PTR)
  
  ; init end
  LD OSI__START_STR_PTR
  FCALL ($PRINTLN_PTR)
  FCALL ($PRINT_ENDL_PTR)

  LD SHELL_PROC_PTR
  FCALL ($PROC_INIT_PTR)
  JUMP (SHELL_PROC_PTR)

; end func OS__INIT


; func OS__PANIC: ()
; begin globals
OSI__PANIC_STR: WORD "Kernel panic!"
; end globals
; begin func
EXPORT OS__PANIC:
  LD $OSI__PANIC_STR
  HLT
; end func OS__PANIC
